import sys
import argparse
import requests
from concurrent.futures import ThreadPoolExecutor

webdav_dirs = ["dav", "webdav", "DAV", "WEBDAV", "WebDav", "Dav"]

# Using argparse to parse command-line arguments
parser = argparse.ArgumentParser(description='WebDAV scanner')
group = parser.add_mutually_exclusive_group(required=True)
group.add_argument('-l', '--list', help='File containing a list of URLs')
group.add_argument('-u', '--url', help='Single URL')
parser.add_argument('-t', '--threads', help='Number of threads', type=int, default=1)
parser.add_argument('-o', '--output', help='File to save the output')
args = parser.parse_args()

if args.list:
    try:
        with open(args.list, 'r') as f:
            urls = f.read().splitlines()
    except:
        print("[-] Error reading file")
        sys.exit()
else:
    urls = [args.url]

def check_webdav(url):
    for webdav_dir in webdav_dirs:
        target_url = url + '/' + webdav_dir
        try:
            r = requests.options(target_url)
            if 'DAV' in r.headers or 'Server' in r.headers:
                print(f"[+] {target_url} is WebDAV enabled")
                return target_url
        except:
            pass
    return None

with ThreadPoolExecutor(max_workers=args.threads) as executor:
    webdav_enabled_urls = [url for url in executor.map(check_webdav, urls) if url is not None]

# Saving the output to a file
if args.output:
    with open(args.output, 'w') as f:
        for url in webdav_enabled_urls:
            f.write(url + '\n')

#Printing the output
print("Enabled WebDav urls are:")
print(*webdav_enabled_urls, sep='\n')
