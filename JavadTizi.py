import socket
import sys
import json
import requests



def send_message_to_discord(response_encoded, webhook_url):
    """Send a message to Discord with the details of the changes."""
    message = {
        "content": response_encoded
    }
    print(message)
    requests.post(webhook_url, data=json.dumps(message), headers={"Content-Type": "application/json"})
    
# Get the Discord webhook URL from the command line argument
webhook_url = sys.argv[1]

# Create a TCP/IP socket
sock = socket.socket(socket.AF_INET, socket.SOCK_STREAM)

# Bind the socket to the port
server_address = ('', 6789)
print('Starting up on {} port {}'.format(*server_address))
sock.bind(server_address)

# Listen for incoming connections
sock.listen(1)

while True:
    # Wait for a connection
    print('Waiting for a connection')
    connection, client_address = sock.accept()
    try:
        print('Connection from', client_address)

        # Send the client a message
        connection.sendall(b'This is the Burp Collaborator-like server\n')

        # Receive the data in small chunks and retransmit it
        while True:
            dataa = connection.recv(1024)
            if dataa:
                # Send the data to the Discord webhook
                try:
                    data = f"==============\nGot request from: {client_address[0]}\nThis is Whole request:\n{dataa}"
                    send_message_to_discord(data, webhook_url)
                except Exception as e:
                    print('Error sending data to Discord:', e)
            else:
                # No more data, the connection is closed
                break
    except Exception as e:
        print('Error receiving data:', e)
    finally:
        # Clean up the connection
        connection.close()

